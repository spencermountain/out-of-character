{"version":3,"file":"out-of-character.js","sources":["../src/isEmoji.js","../src/match.js","../src/index.js","../src/index.js?commonjs-entry"],"sourcesContent":["'use strict'\n\nconst isVariationSelector = (num) => num >= 65024 && num <= 65039\nconst isHighSurrogate = (num) => num >= 55296 && num <= 56319\nconst isLowSurrogate = (num) => num >= 56320 && num <= 57343\n\n/**\n * @description Checks if the character at the given index in the text is an emoji.\n * @param {string} text - The text to check for emojis.\n * @param {number} i - The offset of the character to check.\n * @returns {boolean} True if the character is an emoji, false otherwise.\n */\nconst isEmoji = function (text, i) {\n  // Look at code before\n  if (text[i - 1]) {\n    const code = text.charCodeAt(i - 1)\n    if (isHighSurrogate(code) || isLowSurrogate(code) || isVariationSelector(code)) {\n      return true\n    }\n  }\n  // Look at code after\n  if (text[i + 1]) {\n    const code = text.charCodeAt(i + 1)\n    if (isHighSurrogate(code) || isLowSurrogate(code) || isVariationSelector(code)) {\n      return true\n    }\n  }\n\n  return false\n}\n\nmodule.exports = isEmoji","'use strict'\n\nconst data = require('../data/characters.json')\nconst isEmoji = require('./isEmoji')\n\n// For easier lookup\nconst byCode = data.reduce((h, obj) => {\n  h[obj.code] = obj\n  return h\n}, {})\n\n// Chars to create our regex with\nconst unicodePrefixRegex = /^U\\+/\nconst codes = data\n  .filter((obj) => obj.replaceWith !== undefined)\n  .map((obj) => {\n    // Convert \"U+XXXX\" to \"\\\\uXXXX\" for RegExp\n    return obj.code.replace(unicodePrefixRegex, '\\\\u')\n  })\nconst codeRegex = new RegExp(`(${codes.join('|')})`, 'g')\n\n/**\n * @description Finds all invisible characters in the given text.\n * @param {string} text - The text to search for invisible characters.\n * @returns {{name: string, code: string, offset: number, replacement: string}[]} An array\n * of objects representing the found invisible characters.\n */\nconst findAll = function (text) {\n  const matches = []\n\n  for (const match of text.matchAll(codeRegex)) {\n    const char = match[0]\n    const offset = match.index\n\n    // Find the code details of the matched character\n    const codePoint = char.codePointAt(0) // Use codePointAt for full Unicode support\n    const hex = 'U+' + codePoint.toString(16).toUpperCase().padStart(4, '0')\n\n    const found = byCode[hex] // Lookup using the canonical 'U+XXXX' format\n    if (found) {\n      // Don't report U+200D (Zero Width Joiner) if it's part of an emoji sequence\n      if (found.code === 'U+200D' && isEmoji(text, offset)) {\n        continue\n      }\n\n      matches.push({\n        name: found.name,\n        code: found.code,\n        offset: offset,\n        replacement: found.replaceWith || '',\n      })\n    }\n  }\n  return matches\n}\n\nmodule.exports = findAll","'use strict'\n\nconst findAll = require('./match')\n\nmodule.exports = {\n  /**\n   * @description Detects hidden characters in the given text.\n   * @param {string} text - The text to search for hidden characters.\n   * @returns {{name: string, code: string, offset: number, replacement: string}[]|null} An array\n   * of objects representing the found hidden characters, or null if none are found.\n   */\n  detect: (text) => {\n    const matches = findAll(text)\n    if (matches.length > 0) {\n      return matches\n    }\n    return null\n  },\n  /**\n   * @description Remove invisible or strange unicode characters from the text.\n   * @param {string} text - The text to search.\n   * @returns {string} The text with invisible characters removed.\n   */\n  replace: (text) => {\n    const matches = findAll(text)\n\n    // Early return if no matches\n    if (matches.length === 0) {\n      return text\n    }\n    \n    let result = ''\n    let lastIndex = 0\n\n    for (const match of matches) {\n      result += text.slice(lastIndex, match.offset)\n      result += match.replacement\n      lastIndex = match.offset + 1\n    }\n    result += text.slice(lastIndex)\n\n    return result\n  },\n}","import { getDefaultExportFromCjs } from \"\u0000commonjsHelpers.js\";\nimport { __require as requireSrc } from \"C:\\\\Users\\\\fraze\\\\Documents\\\\git-repos\\\\forks\\\\out-of-character\\\\src\\\\index.js\";\nvar srcExports = requireSrc();\nexport { srcExports as __moduleExports };\nexport default /*@__PURE__*/getDefaultExportFromCjs(srcExports);"],"names":["require$$1","require$$0"],"mappingsmBAAmB,GAAG,CAAC,GAAG,KAAK,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI;EAC5D,MAAM,eAAe,GAAG,CAAC,GAAG,KAAK,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI;EACxD,MAAM,cAAc,GAAG,CAAC,GAAG,KAAK,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI;;CAEvD;CACA;CACA;CACA;CACA;CACA;CACA,CAAA,MAAM,OAAO,GAAG,UAAU,IAAI,EAAE,CAAC,EAAE;CACnC;CACA,GAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;MACf,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC;CACtC,KAAI,IAAI,eAAe,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAAC,IAAI,CAAC,EAAE;CACpF,OAAM,OAAO;CACb;CACA;CACA;CACA,GAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;MACf,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC;CACtC,KAAI,IAAI,eAAe,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAAC,IAAI,CAAC,EAAE;CACpF,OAAM,OAAO;CACb;CACA;;CAEA,GAAE,OAAO;CACT;;CAEA,CAAA,SAAc,GAAG;;;;;;;;;;;CC7BjB,CAAA,MAAM,IAAI,GAAG;CACb,CAAA,MAAM,OAAO,GAAGA,cAAA;;CAEhB;EACA,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,KAAK;CACvC,GAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG;CAChB,GAAE,OAAO;CACT,EAAC,EAAE,EAAE;;CAEL;CACA,CAAA,MAAM,kBAAkB,GAAG;CAC3B,CAAA,MAAM,KAAK,GAAG;KACX,MAAM,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,WAAW,KAAK,SAAS;CAChD,IAAG,GAAG,CAAC,CAAC,GAAG,KAAK;CAChB;MACI,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,KAAK;KAClD;CACH,CAAA,MAAM,SAAS,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG;;CAExD;CACA;CACA;CACA;CACA;CACA;CACA,CAAA,MAAM,OAAO,GAAG,UAAU,IAAI,EAAE;IAC9B,MAAM,OAAO,GAAG;;IAEhB,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;CAChD,KAAI,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC;CACxB,KAAI,MAAM,MAAM,GAAG,KAAK,CAAC;;CAEzB;MACI,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,EAAC;CACzC,KAAI,MAAM,GAAG,GAAG,IAAI,GAAG,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG;;CAE3E,KAAI,MAAM,KAAK,GAAG,MAAM,CAAC,GAAG,EAAC;MACzB,IAAI,KAAK,EAAE;CACf;CACA,OAAM,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,IAAI,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE;UACpD;CACR;;QAEM,OAAO,CAAC,IAAI,CAAC;CACnB,SAAQ,IAAI,EAAE,KAAK,CAAC,IAAI;CACxB,SAAQ,IAAI,EAAE,KAAK,CAAC,IAAI;UAChB,MAAM,EAAE,MAAM;CACtB,SAAQ,WAAW,EAAE,KAAK,CAAC,WAAW,IAAI,EAAE;SACrC;CACP;CACA;CACA,GAAE,OAAO;CACT;;CAEA,CAAA,KAAc,GAAG;;;;;;;;;;;CCtDjB,CAAA,MAAM,OAAO,GAAGC,YAAA;;CAEhB,CAAA,GAAc,GAAG;CACjB;CACA;CACA;CACA;CACA;CACA;CACA,GAAE,MAAM,EAAE,CAAC,IAAI,KAAK;CACpB,KAAI,MAAM,OAAO,GAAG,OAAO,CAAC,IAAI;CAChC,KAAI,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;CAC5B,OAAM,OAAO;CACb;CACA,KAAI,OAAO;KACR;CACH;CACA;CACA;CACA;CACA;CACA,GAAE,OAAO,EAAE,CAAC,IAAI,KAAK;CACrB,KAAI,MAAM,OAAO,GAAG,OAAO,CAAC,IAAI;;CAEhC;CACA,KAAI,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;CAC9B,OAAM,OAAO;CACb;CACA;MACI,IAAI,MAAM,GAAG;MACb,IAAI,SAAS,GAAG;;CAEpB,KAAI,KAAK,MAAM,KAAK,IAAI,OAAO,EAAE;QAC3B,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,MAAM;QAC5C,MAAM,IAAI,KAAK,CAAC;CACtB,OAAM,SAAS,GAAG,KAAK,CAAC,MAAM,GAAG;CACjC;CACA,KAAI,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS;;CAElC,KAAI,OAAO;KACR;CACH;;;;CCzCA,IAAI,UAAU,GAAG,UAAU,EAAE;AAE7B,aAAe,aAAa,uBAAuB,CAAC,UAAU,CAAC;;;;;;;;"}