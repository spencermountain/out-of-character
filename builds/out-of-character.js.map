{"version":3,"file":"out-of-character.js","sources":["../src/isEmoji.js","../src/match.js","../src/index.js"],"sourcesContent":["const isVariationSelector = (num) => num >= 65024 && num <= 65039\nconst isHighSurrogate = (num) => num >= 55296 && num <= 56319\nconst isLowSurrogate = (num) => num >= 56320 && num <= 57343\n\n/**\n * @description Checks if the character at the given index in the text is an emoji.\n * @param {string} text - The text to check for emojis.\n * @param {number} i - The offset of the character to check.\n * @returns {boolean} True if the character is an emoji, false otherwise.\n */\nconst isEmoji = function (text, i) {\n  // Look at code before\n  if (text[i - 1]) {\n    const code = text.charCodeAt(i - 1)\n    if (isHighSurrogate(code) || isLowSurrogate(code) || isVariationSelector(code)) {\n      return true\n    }\n  }\n  // Look at code after\n  if (text[i + 1]) {\n    const code = text.charCodeAt(i + 1)\n    if (isHighSurrogate(code) || isLowSurrogate(code) || isVariationSelector(code)) {\n      return true\n    }\n  }\n\n  return false\n}\n\nexport default isEmoji\n","import data from '../data/characters.json' with { type: 'json' }\nimport isEmoji from './isEmoji.js'\n\n// For easier lookup\nconst byCode = data.reduce((h, obj) => {\n  h[obj.code] = obj\n  return h\n}, {})\n\nconst codes = data\n  .filter((obj) => obj.replaceWith !== undefined)\n  .map((obj) => obj.actualUnicodeChar)\nconst codeRegex = new RegExp(`(${codes.join('|')})`, 'gu')\n\n/**\n * @description Finds all invisible characters in the given text.\n * @param {string} text - The text to search for invisible characters.\n * @returns {{name: string, code: string, offset: number, replacement: string}[]} An array\n * of objects representing the found invisible characters.\n */\nconst findAll = function (text) {\n  const matches = []\n\n  for (const match of text.matchAll(codeRegex)) {\n    const char = match[0]\n    const offset = match.index\n\n    // Find the code details of the matched character\n    const codePoint = char.codePointAt(0) // Use codePointAt for full Unicode support\n    const hex = 'U+' + codePoint.toString(16).toUpperCase().padStart(4, '0')\n\n    const found = byCode[hex] // Lookup using the canonical 'U+XXXX' format\n    if (found) {\n      // Don't report U+200D (Zero Width Joiner) if it's part of an emoji sequence\n      if (found.code === 'U+200D' && isEmoji(text, offset)) {\n        continue\n      }\n\n      matches.push({\n        code: found.code,\n        name: found.name,\n        offset: offset,\n        replacement: found.replaceWith || '',\n      })\n    }\n  }\n  return matches\n}\n\nexport default findAll\n","import findAll from './match.js'\n\n\n/**\n * @description Detects hidden characters in the given text.\n * @param {string} text - The text to search for hidden characters.\n * @returns {{name: string, code: string, offset: number, replacement: string}[]|null} An array\n * of objects representing the found hidden characters, or null if none are found.\n */\nconst detect = function (text) {\n  const matches = findAll(text)\n  if (matches.length > 0) {\n    return matches\n  }\n  return null\n}\n\n/**\n * @description Remove invisible or strange unicode characters from the text.\n * @param {string} text - The text to search.\n * @returns {string} The text with invisible characters removed.\n */\nconst replace = function (text) {\n  const matches = findAll(text)\n\n  // Early return if no matches\n  if (matches.length === 0) {\n    return text\n  }\n\n  let result = ''\n  let lastIndex = 0\n\n  const matchesLength = matches.length\n  for (let i = 0; i < matchesLength; i += 1) {\n    const match = matches[i]\n    result += text.slice(lastIndex, match.offset)\n    result += match.replacement\n    lastIndex = match.offset + 1\n  }\n  result += text.slice(lastIndex)\n\n  return result\n}\n\nexport { detect, replace }"],"names":[],"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"}